---
type project = {
  title: string;
  description: string;
  image?: string;
  link?: string;
  tags?: string[];
};
import "../styles/global.css";
// import { Links } from "../components/link";
import PortfolioCard from "../components/PortfolioCard.astro";
const portfolio: project[] = [
  {
    title: "Drone Simulation System",
    description:
      "A drone simulation system using C++, HTML, JavaScript. Docker is used for containerization, and software design patterns are used to design the system. The system is designed to be scalable and extensible.",
    image: "../../public/images/project-sample.png",
  },
  {
    title: "Drone Simulation System",
    description:
      "A drone simulation system using C++, HTML, JavaScript. Docker is used for containerization, and software design patterns are used to design the system. The system is designed to be scalable and extensible.",
    image: "../../public/images/project-sample.png",
  },
  {
    title: "Drone Simulation System",
    description:
      "A drone simulation system using C++, HTML, JavaScript. Docker is used for containerization, and software design patterns are used to design the system. The system is designed to be scalable and extensible.",
    image: "../../public/images/project-sample.png",
  },
];
---

<div id="projects">
  <div class="container">
    <!-- <div class="center" aria-hidden="true"></div> -->
    <h1 class="title left animation">Featured Projects</h1>
    <ul class="portfolio-container">
      {portfolio.map((project) => <PortfolioCard project={project} />)}
    </ul>
  </div>
</div>
<div class="wave"></div>

<style lang="scss">
  @use "../styles/variables.scss";
  @use "../styles/breakpoints.scss";
  @use "../styles/animations.scss";
  .center {
    position: fixed;
    height: 100%;
    left: 50%;
    right: 50%;
  }
  #projects {
    padding: variables.$container-padding 0;
    @media (min-width: breakpoints.$tablets) {
      
    }
  }
  .container {
    margin: auto;
    display: grid;
    grid-template-rows: auto auto;
    justify-items: center;
    height: 100%;
    @media (min-width: breakpoints.$tablets) {
      width: 100%;
    }
    @media (min-width: breakpoints.$desktop) {
      padding-top: 2rem;
    }
    @media (min-width: breakpoints.$largedevice) {
      padding-top: 3rem;
    }
  }
  .portfolio-container {
      display: grid;
    @media (min-width: breakpoints.$tablets) {
      grid-template-columns: auto auto;
    }
  }
  .title {
    color: variables.$primary-color;
    font-size: 32px;
    font-weight: 600;
    height: fit-content;
    overflow: hidden; /* Hide overflowing content */
    &.intersect {
      overflow: visible;
    }
    @media (min-width: breakpoints.$tablets) {
      font-size: 48px;
    }
  }
  .sub-title {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    height: 100%;
    align-self: center;
    @media (min-width: breakpoints.$tablets) {
    }
  }
  .sub-title p {
    color: variables.$primary-color;
    /* H1 */
    font-family: Lato;
    font-size: 20px;
    @media (min-width: breakpoints.$tablets) {
      font-size: 25px;
      font-weight: 500;
    }
    @media (min-width: breakpoints.$desktop) {
      color: variables.$primary-color;
      font-size: 30px;
    }
  }
  .link {
    text-decoration: underline;
    &:hover {
      font-weight: 600;
      cursor: pointer;
    }
  }

  .wave {
    display: block;
    position: relative;
    width: 100dvw;
    height: 22px;
    background: url("/images/wave.png") repeat-x;
    background-size: auto 22px;
    z-index: 1;
    bottom: -48px;
    content: "";
  }
</style>
